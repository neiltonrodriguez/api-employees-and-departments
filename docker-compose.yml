version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: api-employees-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: companydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  flyway:
    image: flyway/flyway:10-alpine
    container_name: api-employees-flyway
    command: -connectRetries=60 migrate
    volumes:
      - ./db/migrations:/flyway/sql
    environment:
      FLYWAY_URL: jdbc:postgresql://db:5432/companydb
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: postgres
      FLYWAY_SCHEMAS: public
      FLYWAY_BASELINE_ON_MIGRATE: "true"
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-employees-app
    environment:
      APP_NAME: ApiEmployeesAndDepartments
      APP_ENV: development
      APP_PORT: 8080
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: companydb
      DATABASE_SSLMODE: disable
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  postgres_data:
